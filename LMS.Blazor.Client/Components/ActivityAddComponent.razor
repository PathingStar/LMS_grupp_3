@if (!isAdding)
{
	<div class="container mt-4">
		<div class="card shadow-sm text-center card-hover" style="cursor:pointer;" @onclick="Toggle">
			<div class="card-body">
				<h5 class="card-title">＋</h5>
				<p class="card-text">New activity</p>
			</div>
		</div>
	</div>
}
else
{
	<h3 style="text-align: center">New course:</h3>
	<div class="container mt-4">

		<div class="card shadow-sm">
			<div class="card-body">
				<EditForm Model="@Activity" OnValidSubmit="@(() => HandleValidSubmit())">
					<DataAnnotationsValidator />
					<ValidationSummary />
					<div class="mb-3">
						<label for="activityName" class="form-label">Activity Name</label>
						<InputText id="activityName" class="form-control" @bind-Value="Activity.Name" />
						<ValidationMessage For="@(() => Activity.Name)" />
					</div>
					<div class="mb-3">
						<label for="activityDescription" class="form-label">Description</label>
						<InputTextArea id="courseDescription" class="form-control" @bind-Value="Activity.Description" />
						<ValidationMessage For="@(() => Activity.Description)" />
					</div>
					<div class="mb-3">
						<label for="activityStartDate" class="form-label">Start Date</label>
						<InputDate id="activityStartDate" class="form-control" @bind-Value="Activity.StartDate" />
						<ValidationMessage For="@(() => Activity.StartDate)" />
					</div>
					<div class="mb-3">
						<label for="courseEndDate" class="form-label">End Date</label>
						<InputDate id="activityEndDate" class="form-control" @bind-Value="Activity.EndDate" />
						<ValidationMessage For="@(() => Activity.EndDate)" />
					</div>
					<button type="submit" class="btn btn-primary">Add</button> <button type="button" class="btn btn-primary" @onclick=Toggle>Cancel</button>
				</EditForm>
			</div>
		</div>
	</div>
}


@code {
	public ModuleActivityCreateDto Activity { get; set; } = new ModuleActivityCreateDto();
	private bool isAdding = false;

	[Inject]
	private IApiService myApi { get; set; } = default!;

	private async Task HandleValidSubmit()
	{
		var newCourseDto = await myApi.CallApiPostAsync<ModuleActivityCreateDto, ModuleActivityDto>("courses", Activity);

		Console.WriteLine($"Course '{Activity.Name}' saved successfully!");
	}

	private void Toggle() => isAdding = !isAdding;
}
