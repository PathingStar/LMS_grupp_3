
<h3>Course Add Form</h3>
<div class="container">
	<EditForm Model="@Course" OnSubmit="@(()=>HandleValidSubmit())">
		<DataAnnotationsValidator />
		<ValidationSummary />
		<div class="mb-3">
			<label for="courseName" class="form-label">Course Name</label>
			<InputText id="courseName" class="form-control" @bind-Value="Course.Name" />
			<ValidationMessage For="@(() => Course.Name)" />
		</div>
		<div class="mb-3">
			<label for="courseDescription" class="form-label">Description</label>
			<InputTextArea id="courseDescription" class="form-control" @bind-Value="Course.Description" />
			<ValidationMessage For="@(() => Course.Description)" />
		</div>
		<div class="mb-3">
			<label for="courseStartDate" class="form-label">Start Date</label>
			<InputDate id="courseStartDate" class="form-control" @bind-Value="Course.StartDate" />
			<ValidationMessage For="@(() => Course.StartDate)" />
		</div>
		<div class="mb-3">
			<label for="courseEndDate" class="form-label">End Date</label>
			<InputDate id="courseEndDate" class="form-control" @bind-Value="Course.EndDate" />
			<ValidationMessage For="@(() => Course.EndDate)" />
		</div>
		<button type="submit" class="btn btn-primary">Add</button>
	</EditForm>
	<button  @onclick=@(()=>HandleValidSubmit())> sagdjn </button>
	</div>

@code {
	public CourseCreateDto Course { get; set; } = new CourseCreateDto();

	[Inject]
	private IApiService myApi { get; set; } = default!;

	private async Task HandleValidSubmit()
	{
		var newCourseDto =  await myApi.CallApiPostAsync<CourseCreateDto, CourseDto>("courses", Course);

		Console.WriteLine($"Course '{Course.Name}' saved successfully!");
	}
}
