@using System.Security.Claims
@using System.Text.Json


<div class="border">
	<DocumentAddComponent ParentType="Submission" Submissions="@MyDtoArr" OnUploadSuccess="HandleUploadSuccess" />
</div>

@code 
{
	[Parameter] public EventCallback<DocumentDto> OnUploadSuccess { get; set; }
	[CascadingParameter] private Task<AuthenticationState> AuthStateTask { get; set; }
	private string? UploaderId;
	private List<SubmissionCreateDto> MyDtoArr;
	private SubmissionCreateDto dto;
//	private string serializedData="[]";

	protected override async Task OnInitializedAsync()
	{
		var authState = await AuthStateTask;
		var user = authState.User;
		if (user.Identity?.IsAuthenticated == true)
		{
			UploaderId = user.FindFirst(c => c.Type == ClaimTypes.NameIdentifier)?.Value;
		}

		MyDtoArr = new List<SubmissionCreateDto>();
		dto = new SubmissionCreateDto
		{
			SubmissionDate = DateTime.Now,
			ApplicationUserId = UploaderId
			//		DocumentId = "Assignment";
		};
		MyDtoArr.Add(dto);
		Console.WriteLine($"dto-date:{dto.SubmissionDate.ToShortTimeString()}");	
		//serializedData = JsonSerializer.Serialize(MyDtoArr);
		//var stringContent = new StringContent(json, Encoding.UTF8, "application/json");

	}

	private async Task HandleUploadSuccess(DocumentDto doc)
	{
		//DocumentDtos.Add(doc);
		//StateHasChanged();
		await OnUploadSuccess.InvokeAsync(doc);
	}



}
